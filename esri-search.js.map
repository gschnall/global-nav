{"version":3,"file":"esri-search.js","sources":["node_modules/domose/domose.js","search.js"],"sourcesContent":["/* Speculative DOM Functionality\n/* ========================================================================== */\n\nfunction __assignSource(element, source, prefix) {\n\tfor (let key in source) {\n\t\tif ('function' === typeof source[key]) {\n\t\t\t// add functions as event listeners\n\t\t\telement.addEventListener(prefix + key, source[key]);\n\t\t} else if (Object(source[key]) === source[key]) {\n\t\t\t// assign objects as source\n\t\t\t__assignSource(element, source[key], `${prefix + key}-`);\n\t\t} else {\n\t\t\t// otherwise, set attributes\n\t\t\telement.setAttribute(prefix + key, source[key]);\n\t\t}\n\t}\n}\n\n/* Assign an element with attributes, events, and children\n/* ========================================================================== */\n\nfunction $assign(id) {\n\t// $assign(element, { class: 'btn', click: () => { /* listener */ } });\n\t// $assign('button', { aria: { label: 'title' } }, child);\n\t// $assign('div', child1, child2, 'a new text node');\n\t// $assign(document.createElementNS('http://www.w3.org/2000/svg', 'svg'));\n\n\tconst element = id instanceof Node ? id : document.createElement(id);\n\n\t[].slice.call(arguments, 1).forEach((source) => {\n\t\tif (source instanceof Node) {\n\t\t\t// append sources that are nodes\n\t\t\telement.appendChild(source);\n\t\t} else if ('string' === typeof source) {\n\t\t\t// append strings as text nodes\n\t\t\telement.appendChild(\n\t\t\t\tdocument.createTextNode(source)\n\t\t\t);\n\t\t} else {\n\t\t\t__assignSource(element, source, '');\n\t\t}\n\t});\n\n\treturn element;\n}\n\n/* Replace all the children of a parent node with new children\n/* ========================================================================== */\n\nfunction $replaceAll(parentNode) {\n\t// $replaceAll(element);\n\t// $replaceAll(element, child1, child2);\n\n\twhile (parentNode.lastChild) {\n\t\tparentNode.removeChild(parentNode.lastChild);\n\t}\n\n\tparentNode.appendChild(\n\t\t__asFragment(arguments)\n\t);\n\n\treturn parentNode;\n}\n\n/* Wrap a child node within an element\n/* ========================================================================== */\n\nfunction $wrapWith(childNode, element) {\n\t// $wrapWith(element, wrappingElement);\n\n\tif (childNode.parentNode) {\n\t\tchildNode.parentNode.insertBefore(element, childNode).appendChild(childNode);\n\t}\n\n\treturn childNode;\n}\n\n/* Emerging DOM Functionality\n/* ========================================================================== */\n\nfunction __asFragment(nodes) {\n\tconst fragment = document.createDocumentFragment();\n\n\t[].slice.call(nodes, 1).forEach((node) => {\n\t\tif (node instanceof Node) {\n\t\t\tfragment.appendChild(node);\n\t\t} else {\n\t\t\tfragment.appendChild(\n\t\t\t\tdocument.createTextNode(node)\n\t\t\t);\n\t\t}\n\t});\n\n\treturn fragment;\n}\n\n/* Insert nodes after a child node\n/* ========================================================================== */\n\nfunction $after(childNode) {\n\t// $after(element, sibling1, sibling2, 'a new text node');\n\n\tif (childNode.parentNode) {\n\t\tchildNode.parentNode.insertBefore(\n\t\t\t__asFragment(arguments),\n\t\t\tchildNode.nextSibling\n\t\t);\n\t}\n\n\treturn childNode;\n}\n\n/* Appends nodes to a parent node\n/* ========================================================================== */\n\nfunction $append(parentNode) {\n\t// $append(parentNode, child1, child2, 'a new text node');\n\n\tparentNode.append(\n\t\t__asFragment(arguments)\n\t);\n\n\treturn parentNode;\n}\n\n/* Insert nodes before an element\n/* ========================================================================== */\n\nfunction $before(element) {\n\t// $before(element, sibling1, sibling2, 'a new text node');\n\n\tif (element.parentNode) {\n\t\telement.parentNode.insertBefore(\n\t\t\t__asFragment(arguments),\n\t\t\telement\n\t\t);\n\t}\n\n\treturn element;\n}\n\n/* Return the closest ancestor element matching a given selector\n/* ========================================================================== */\n\nfunction $closest(element, selectors) {\n\t// $closest(element, selectors);\n\n\tlet target = element;\n\n\twhile (target && 1 === target.nodeType) {\n\t\tif ($matches(target, selectors)) {\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n}\n\n/* Return whether or not a DOM element matches a given selector\n/* ========================================================================== */\n\nfunction $matches(element, selectors) {\n\t// $matches(element, selectors);\n\n\tconst elements = element.parentNode.querySelectorAll(selectors);\n\n\tlet index = 0;\n\n\twhile (elements[index] && elements[index] !== element) {\n\t\t++index;\n\t}\n\n\treturn Boolean(elements[index]);\n}\n\n/* Prepends a child to a parent node\n/* ========================================================================== */\n\nfunction $prepend(parentNode) {\n\t// $prepend(element, child1, child2, 'a new text node');\n\n\tparentNode.insertBefore(\n\t\t__asFragment(arguments),\n\t\tparentNode.firstChild\n\t);\n\n\treturn parentNode;\n}\n\n/* Remove a child node from its parent\n/* ========================================================================== */\n\nfunction $remove(childNode) {\n\t// $remove(element);\n\n\tif (childNode.parentNode) {\n\t\tchildNode.parentNode.removeChild(childNode);\n\t}\n\n\treturn childNode;\n}\n\n/* Replace a child node with nodes\n/* ========================================================================== */\n\nfunction $replaceWith(childNode) {\n\t// $replaceWith(element, sibling1, sibling2, 'a new text node');\n\n\tif (childNode.parentNode) {\n\t\tchildNode.parentNode.replaceChild(\n\t\t\t__asFragment(arguments),\n\t\t\tchildNode\n\t\t);\n\t}\n\n\treturn childNode;\n}\n\n/* Emerging Event Functionality\n/* ========================================================================== */\n\n/* Create a new CustomEvent\n/* ========================================================================== */\n\nfunction $CustomEvent(type) {\n\t// element.dispatchEvent(new $CustomEvent('click', { bubbles: true }));\n\n\tconst event = document.createEvent('CustomEvent');\n\tconst param = Object(arguments[1]) || { bubbles: false, cancelable: false, detail: undefined };\n\n\tevent.initCustomEvent(type, param.bubbles, param.cancelable, param.detail);\n\n\treturn event;\n}\n\n/* Fetch response text from a URL and pass it to a callback\n/* ========================================================================== */\n\nfunction $fetch(url, callback) {\n\t// $fetch('api?foo=bar', (responseText) => {});\n\n\tconst xhr = new XMLHttpRequest();\n\n\txhr.addEventListener('readystatechange', () => {\n\t\tif (4 === xhr.readyState && 200 === xhr.status) {\n\t\t\tcallback(xhr.responseText); // eslint-disable-line callback-return\n\t\t}\n\t});\n\n\txhr.open('GET', url);\n\txhr.send();\n\n\treturn xhr;\n}\n\n/* Export\n/* ========================================================================== */\n\nexport {\n\t$assign,\n\t$after,\n\t$append,\n\t$before,\n\t$closest,\n\t$CustomEvent,\n\t$fetch,\n\t$matches,\n\t$prepend,\n\t$remove,\n\t$replaceAll,\n\t$replaceWith,\n\t$wrapWith\n};\n","/* Esri Search Form, Copyright 2017 Esri\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed\nunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\nCONDITIONS OF ANY KIND, either express or implied.\n\nSee the License for the specific language governing permissions and limitations\nunder the License. */\n\nimport { $assign as $, $CustomEvent } from 'domose';\n\n/* Search\n/* ========================================================================== */\n\nexport default (data) => {\n\t/* Elements\n\t/* ====================================================================== */\n\n\tconst $label = $('label', {\n\t\tclass: `${data.prefix}-label`,\n\t\tfor: `${data.prefix}-query-control`\n\t}, data.queryLabel);\n\n\tconst $control = $('input', {\n\t\tclass: `${data.prefix}-control`, id: `${data.prefix}-control`,\n\t\ttype: 'search', name: 'q',\n\t\tautocapitalize: 'off', autocomplete: 'off', autocorrect: 'off', spellcheck: 'false'\n\t});\n\n\tconst $measureTextNode = document.createTextNode('');\n\n\tconst $measureText = $('div', {\n\t\tclass: `${data.prefix}-measure-text`,\n\t\taria: { hidden: true }\n\t}, $measureTextNode);\n\n\tconst $measure = $('div', { class: `${data.prefix}-measure` }, $measureText);\n\n\tconst $submit = $('button', {\n\t\tclass: `${data.prefix}-submit`, type: 'submit',\n\t\taria: { label: data.submitLabel }\n\t});\n\n\tconst $search = $('form', {\n\t\tclass: `${data.prefix}-form`, action: data.action,\n\t\trole: 'search', aria: { label: data.label }\n\t}, $label, $control, $measure, $submit);\n\n\t/* Focus Event\n\t/* ====================================================================== */\n\n\t$search.addEventListener(`${data.prefix}:focus`, () => {\n\t\t$control.focus();\n\t});\n\n\t/* On Input\n\t/* ====================================================================== */\n\n\tlet controlIsFilled = false;\n\tlet controlValue = '';\n\n\tfunction oninput(event) {\n\t\t/* Conditionally Reset Control Value\n\t\t/* ================================================================== */\n\n\t\tif (event && 'reset' === event.type) {\n\t\t\t$control.value = '';\n\t\t}\n\n\t\t/* Update New Control Value\n\t\t/* ================================================================== */\n\n\t\tconst newControlValue = $control.value.trim();\n\n\t\tif (newControlValue !== controlValue) {\n\t\t\tcontrolValue = newControlValue;\n\n\t\t\t$dispatch($search, `${data.prefix}:input`, {\n\t\t\t\tvalue: controlValue,\n\t\t\t\tevent\n\t\t\t});\n\t\t}\n\n\t\t/* Update Label and Submit UI\n\t\t/* ================================================================== */\n\n\t\tif (controlIsFilled && !newControlValue) {\n\t\t\tcontrolIsFilled = false;\n\n\t\t\t$label.removeAttribute('data-filled');\n\t\t\t$submit.removeAttribute('data-filled');\n\t\t} else if (!controlIsFilled && newControlValue) {\n\t\t\tcontrolIsFilled = true;\n\n\t\t\t$($label, { data: { filled: '' } });\n\t\t\t$($submit, { data: { filled: '' } });\n\t\t}\n\n\t\t/* Update Measure UI\n\t\t/* ================================================================== */\n\n\t\t$measureTextNode.nodeValue = newControlValue;\n\n\t\tconst currentWidth = `${$measureText.scrollWidth}px`;\n\n\t\t$measure.style.width = currentWidth;\n\t}\n\n\t/* On Submit\n\t/* ====================================================================== */\n\n\tfunction onsubmit(event) {\n\t\t$dispatch($search, `${data.prefix}:submit`, {\n\t\t\tvalue: $control.value,\n\t\t\tevent\n\t\t});\n\t}\n\n\t/* On DOMNodeInserted\n\t/* ====================================================================== */\n\n\t$search.addEventListener('DOMNodeInserted', function onDOMNodeInserted() {\n\t\t// If Search now has a parent node\n\t\tif ($search.parentNode) {\n\t\t\t// Unbind the DOMNodeInserted method\n\t\t\t$search.removeEventListener('DOMNodeInserted', onDOMNodeInserted);\n\n\t\t\t// Update Search\n\t\t\t$dispatch($search, `${data.prefix}:update`, data);\n\t\t}\n\t});\n\n\t/* On Update\n\t/* ====================================================================== */\n\n\t$search.addEventListener(`${data.prefix}:update`, () => {\n\t\t/* Bind Media Event\n\t\t/* ====================================================================== */\n\n\t\tconst media = $search.ownerDocument.defaultView.matchMedia(data.matchMedia || '(max-width: 720px)');\n\n\t\tmedia.addListener(oninput);\n\n\t\t/* Bind Other Events\n\t\t/* ================================================================== */\n\n\t\t$control.addEventListener('input', oninput);\n\n\t\t$search.addEventListener('reset', oninput);\n\t\t$search.addEventListener('submit', onsubmit);\n\t\t$search.addEventListener(`${data.prefix}:unload`, onunload);\n\t});\n\n\treturn $search;\n};\n\n/* Dispatch Helper\n/* ========================================================================== */\n\nfunction $dispatch(target, type, detail) {\n\ttarget.dispatchEvent($CustomEvent(type, { bubbles: true, detail }));\n}\n"],"names":["__assignSource","element","source","prefix","key","addEventListener","Object","setAttribute","$assign","id","Node","document","createElement","slice","call","arguments","forEach","appendChild","createTextNode","$CustomEvent","type","event","createEvent","param","bubbles","cancelable","detail","undefined","initCustomEvent","$dispatch","target","dispatchEvent","data","oninput","value","newControlValue","$control","trim","controlValue","$search","controlIsFilled","removeAttribute","$label","filled","$submit","nodeValue","currentWidth","$measureText","scrollWidth","style","width","onsubmit","$","queryLabel","name","autocomplete","autocorrect","spellcheck","$measureTextNode","hidden","$measure","class","label","submitLabel","action","aria","focus","onDOMNodeInserted","parentNode","removeEventListener","ownerDocument","defaultView","matchMedia","addListener","onunload"],"mappings":"uCAGA,SAASA,EAAeC,EAASC,EAAQC,OACnC,IAAIC,KAAOF,EACX,mBAAsBA,EAAOE,KAExBC,iBAAiBF,EAASC,EAAKF,EAAOE,IACpCE,OAAOJ,EAAOE,MAAUF,EAAOE,KAE1BH,EAASC,EAAOE,GAASD,EAASC,SAGzCG,aAAaJ,EAASC,EAAKF,EAAOE,IAQ7C,SAASI,EAAQC,OAMVR,EAAUQ,aAAcC,KAAOD,EAAKE,SAASC,cAAcH,YAE9DI,MAAMC,KAAKC,UAAW,GAAGC,QAAQ,SAACd,GAChCA,aAAkBQ,OAEbO,YAAYf,GACV,iBAAoBA,IAEtBe,YACPN,SAASO,eAAehB,MAGVD,EAASC,EAAQ,MAI3BD,EAuLR,SAASkB,EAAaC,OAGfC,EAAQV,SAASW,YAAY,eAC7BC,EAAQjB,OAAOS,UAAU,MAASS,SAAS,EAAOC,YAAY,EAAOC,YAAQC,YAE7EC,gBAAgBR,EAAMG,EAAMC,QAASD,EAAME,WAAYF,EAAMG,QAE5DL,ECvER,SAASQ,EAAUC,EAAQV,EAAMM,KACzBK,cAAcZ,EAAaC,GAAQI,SAAS,EAAME,4BAlJ1CM,YA+CNC,EAAQZ,GAIZA,GAAS,UAAYA,EAAMD,SACrBc,MAAQ,QAMZC,EAAkBC,EAASF,MAAMG,OAEnCF,IAAoBG,MACRH,IAELI,EAAYP,EAAK7B,uBACnBmC,aAQLE,IAAoBL,MACL,IAEXM,gBAAgB,iBACfA,gBAAgB,iBACbD,GAAmBL,OACZ,IAEhBO,GAAUV,MAAQW,OAAQ,QAC1BC,GAAWZ,MAAQW,OAAQ,SAMbE,UAAYV,MAEvBW,EAAkBC,EAAaC,mBAE5BC,MAAMC,MAAQJ,WAMfK,EAAS9B,KACPkB,EAAYP,EAAK7B,wBACnBiC,EAASF,oBA/FZQ,EAASU,EAAE,eACNpB,EAAK7B,oBACP6B,EAAK7B,yBACX6B,EAAKqB,YAEFjB,EAAWgB,EAAE,eACRpB,EAAK7B,kBAAkBM,GAAOuB,EAAK7B,uBACvC,SAAUmD,KAAM,mBACN,MAAOC,aAAc,MAAOC,YAAa,MAAOC,WAAY,UAGvEC,EAAmB/C,SAASO,eAAe,IAE3C6B,EAAeK,EAAE,aACZpB,EAAK7B,6BACPwD,QAAQ,IACdD,GAEGE,EAAWR,EAAE,OAASS,MAAU7B,EAAK7B,mBAAoB4C,GAEzDH,EAAUQ,EAAE,gBACPpB,EAAK7B,iBAAiBiB,KAAM,eAC9B0C,MAAO9B,EAAK+B,eAGfxB,EAAUa,EAAE,cACPpB,EAAK7B,eAAe6D,OAAQhC,EAAKgC,YACrC,SAAUC,MAAQH,MAAO9B,EAAK8B,QAClCpB,EAAQN,EAAUwB,EAAUhB,KAKvBvC,iBAAoB2B,EAAK7B,gBAAgB,aACvC+D,cAMN1B,GAAkB,EAClBF,EAAe,YA8DXjC,iBAAiB,kBAAmB,SAAS8D,IAEhD5B,EAAQ6B,eAEHC,oBAAoB,kBAAmBF,KAGrC5B,EAAYP,EAAK7B,iBAAiB6B,QAOtC3B,iBAAoB2B,EAAK7B,iBAAiB,WAInCoC,EAAQ+B,cAAcC,YAAYC,WAAWxC,EAAKwC,YAAc,sBAExEC,YAAYxC,KAKT5B,iBAAiB,QAAS4B,KAE3B5B,iBAAiB,QAAS4B,KAC1B5B,iBAAiB,SAAU8C,KAC3B9C,iBAAoB2B,EAAK7B,iBAAiBuE,YAG5CnC","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}